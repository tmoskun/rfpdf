= RFPDF Template Plugin

A template plugin allowing the inclusion of ERB-enabled RFPDF template files.

==
==
== TCPDF Version (The New or UTF8 Version)
==
==

If you are using HTML, it is recommended you install:

gem install -r htmlentities

TCPDF Documentation located at:

http://phpdocs.moodle.org/com-tecnick-tcpdf/TCPDF.html

Example of simple use in .rhtml:

<%
	@pdf = TCPDF.new()
  @pdf.SetMargins(15, 27, 15);
  @pdf.AddPage();
  text_options = {:font => "freeserif"}
  @pdf.draw_text(15, 10, "text", {:font_size => 12, :font => "freeserif"})
%><%=@pdf.Output()%>

See the following files for sample of useage:

test_unicode.rfpdf
utf8test.txt
logo_example.png

FPDF users can migrate to TCPDF by changing the following from:

  pdf = FPDF.new

to:

  pdf = TCPDF.new

ENJOY!

----------------------------------------------------------------
Before using the plugin for html formatting, install the following gems:

gem install hpricot
gem install htmlentities

Transferring HTML formatting into the pdf document

parser = HTMLFormatter::Parser.new(doc, defaults)
parser.to_pdf(pdf)

doc is text containting html formatting, pdf is the pdf document to include the formatted text

Example:
    pdf = TCPDF.new
    pdf.AddPage
    pdf.SetMargins(10, 10, 10)
    pdf.SetAutoPageBreak(true, 10)
    pdf.SetFont('freesans', 'B', 18)
    pdf.Ln
    
    defaults = {:line => 6, :size => 12, :ident => 15}
    doc = "<b>Hello world</b>"
    parser = HTMLFormatter::Parser.new(doc.strip, defaults)
    parser.to_pdf(pdf)
    
    pdf.Output
    
HTML elements supported:
h1-h6, p, ol, ul, li, a, pre, div, code, span, b, strong, i, em, big, small, hr, br
    
    